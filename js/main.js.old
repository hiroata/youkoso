// ===== MAIN JAVASCRIPT FILE =====

// Global variables
let currentLanguage = 'es';
let currentTheme = 'light';
let products = [];
let isMobile = window.innerWidth <= 768;

// DOM Elements
const elements = {
    languageButtons: null,
    themeToggle: null,
    mobileMenuToggle: null,
    mobileMenu: null,
    cartCount: null,
    featuredProductsGrid: null,
    notificationsContainer: null,
    footerSubtitles: null
};

// Initialize the application
document.addEventListener('DOMContentLoaded', function() {
    
    // Initialize DOM elements
    initializeElements();
    
    // Load settings
    loadSettings();
    
    // Initialize features
    initializeLanguageToggle();
    initializeThemeToggle();
    initializeMobileMenu();
    initializeCart();
    initializeMobileFooter();
    
    // Load products
    loadProducts();
    
    // Initialize scroll effects
    initializeScrollEffects();
    
    // Initialize animations
    initializeAnimations();
    
    // Initialize responsive behavior
    initializeResponsive();
});

// Initialize responsive behavior
function initializeResponsive() {
    window.addEventListener('resize', () => {
        const wasMobile = isMobile;
        isMobile = window.innerWidth <= 768;
        
        // Reinitialize mobile footer if screen size changed
        if (wasMobile !== isMobile) {
            initializeMobileFooter();
        }
        
        adjustForMobile();
    });
    
    adjustForMobile();
}

// Initialize mobile footer accordion functionality
function initializeMobileFooter() {
    const footerSubtitles = document.querySelectorAll('.footer-subtitle');
    
    footerSubtitles.forEach(subtitle => {
        // Remove existing event listeners to avoid duplicates
        const newSubtitle = subtitle.cloneNode(true);
        subtitle.parentNode.replaceChild(newSubtitle, subtitle);
        
        if (isMobile) {
            // Add accordion functionality for mobile
            newSubtitle.addEventListener('click', function() {
                const footerSection = this.closest('.footer-section');
                const isFirstSection = footerSection === footerSection.parentNode.firstElementChild;
                
                // Skip accordion for first section (brand section)
                if (isFirstSection) return;
                
                const content = footerSection.querySelector('.footer-links, .contact-info');
                const isExpanded = content && content.classList.contains('expanded');
                
                // Close all other sections first
                footerSubtitles.forEach(otherSubtitle => {
                    if (otherSubtitle !== newSubtitle) {
                        const otherSection = otherSubtitle.closest('.footer-section');
                        const otherContent = otherSection.querySelector('.footer-links, .contact-info');
                        if (otherContent && otherContent.classList.contains('expanded')) {
                            otherSubtitle.classList.remove('expanded');
                            otherContent.classList.remove('expanded');
                        }
                    }
                });
                
                // Toggle current section
                if (content) {
                    if (isExpanded) {
                        newSubtitle.classList.remove('expanded');
                        content.classList.remove('expanded');
                    } else {
                        newSubtitle.classList.add('expanded');
                        content.classList.add('expanded');
                    }
                }
                
                // Update ARIA attributes
                const expanded = content && content.classList.contains('expanded');
                newSubtitle.setAttribute('aria-expanded', expanded);
                if (content) {
                    content.setAttribute('aria-hidden', !expanded);
                }
            });
            
            // Set initial ARIA attributes
            const footerSection = newSubtitle.closest('.footer-section');
            const isFirstSection = footerSection === footerSection.parentNode.firstElementChild;
            
            if (!isFirstSection) {
                newSubtitle.setAttribute('role', 'button');
                newSubtitle.setAttribute('aria-expanded', 'false');
                newSubtitle.setAttribute('tabindex', '0');
                
                const content = footerSection.querySelector('.footer-links, .contact-info');
                if (content) {
                    content.setAttribute('aria-hidden', 'true');
                }
                
                // Add keyboard support
                newSubtitle.addEventListener('keydown', function(e) {
                    if (e.key === 'Enter' || e.key === ' ') {
                        e.preventDefault();
                        this.click();
                    }
                });
            }
        } else {
            // Remove mobile-specific attributes and classes for desktop
            const footerSection = newSubtitle.closest('.footer-section');
            const content = footerSection.querySelector('.footer-links, .contact-info');
            
            newSubtitle.removeAttribute('role');
            newSubtitle.removeAttribute('aria-expanded');
            newSubtitle.removeAttribute('tabindex');
            newSubtitle.classList.remove('expanded');
            
            if (content) {
                content.removeAttribute('aria-hidden');
                content.classList.remove('expanded');
            }
        }
    });
}

function adjustForMobile() {
    const productsGrid = elements.featuredProductsGrid;
    if (productsGrid && isMobile) {
        productsGrid.style.gridTemplateColumns = '1fr';
        productsGrid.style.gap = '1rem';
    } else if (productsGrid) {
        productsGrid.style.gridTemplateColumns = 'repeat(auto-fill, minmax(280px, 1fr))';
        productsGrid.style.gap = '2rem';
    }
}

// Initialize DOM elements
function initializeElements() {
    elements.languageButtons = document.querySelectorAll('.lang-btn');
    elements.themeToggle = document.querySelector('.theme-toggle');
    elements.mobileMenuToggle = document.querySelector('.mobile-menu-toggle');
    elements.mobileMenu = document.querySelector('.mobile-menu');
    elements.cartCount = document.querySelector('.cart-count');
    elements.featuredProductsGrid = document.getElementById('featured-products-grid');
    elements.notificationsContainer = document.getElementById('notifications');
}

// Load user settings from localStorage
function loadSettings() {
    try {
        const savedLanguage = localStorage.getItem('language');
        const savedTheme = localStorage.getItem('theme');
        
        if (savedLanguage && ['es', 'en', 'ja'].includes(savedLanguage)) {
            currentLanguage = savedLanguage;
            updateLanguage(currentLanguage);
        }
        
        if (savedTheme && ['light', 'dark'].includes(savedTheme)) {
            currentTheme = savedTheme;
            updateTheme(currentTheme);
        }
    } catch (error) {
        console.warn('Error loading settings:', error);
    }
}

// Save settings to localStorage
function saveSettings() {
    try {
        localStorage.setItem('language', currentLanguage);
        localStorage.setItem('theme', currentTheme);
    } catch (error) {
        console.warn('Error saving settings:', error);
    }
}

// Language toggle functionality
function initializeLanguageToggle() {
    if (!elements.languageButtons) return;
    
    elements.languageButtons.forEach(button => {
        button.addEventListener('click', function() {
            const lang = this.dataset.lang;
            if (lang && lang !== currentLanguage) {
                currentLanguage = lang;
                updateLanguage(lang);
                saveSettings();
            }
        });
    });
}

// Update language display
function updateLanguage(lang) {
    // Update HTML lang attribute
    document.documentElement.setAttribute('data-lang', lang);
    document.documentElement.setAttribute('lang', lang);
    
    // Update language buttons
    if (elements.languageButtons) {
        elements.languageButtons.forEach(button => {
            button.classList.toggle('active', button.dataset.lang === lang);
        });
    }
    
    // Update page title
    const titles = {
        es: 'Youkoso - Tienda de Productos Japoneses',
        en: 'Youkoso - Japanese Products Store',
        ja: 'ようこそ - 日本商品店'
    };
    document.title = titles[lang] || titles.es;
}

// Theme toggle functionality
function initializeThemeToggle() {
    if (!elements.themeToggle) return;
    
    elements.themeToggle.addEventListener('click', function() {
        currentTheme = currentTheme === 'light' ? 'dark' : 'light';
        updateTheme(currentTheme);
        saveSettings();
    });
}

// Update theme
function updateTheme(theme) {
    // Add transition class before theme change
    document.body.classList.add('theme-transitioning');
    
    document.documentElement.setAttribute('data-theme', theme);
    
    if (elements.themeToggle) {
        const icon = elements.themeToggle.querySelector('i');
        if (icon) {
            icon.className = theme === 'light' ? 'fas fa-moon' : 'fas fa-sun';
        }
    }
    
    // Remove transition class after animation
    setTimeout(() => {
        document.body.classList.remove('theme-transitioning');
    }, 300);
}

// Mobile menu functionality
function initializeMobileMenu() {
    if (!elements.mobileMenuToggle || !elements.mobileMenu) return;
    
    elements.mobileMenuToggle.addEventListener('click', function(e) {
        e.stopPropagation();
        const isActive = elements.mobileMenu.classList.contains('active');
        
        if (!isActive) {
            elements.mobileMenu.classList.add('active');
            elements.mobileMenuToggle.classList.add('active');
            
            // Improve accessibility
            elements.mobileMenuToggle.setAttribute('aria-expanded', 'true');
            elements.mobileMenu.setAttribute('aria-hidden', 'false');
        } else {
            closeMobileMenu();
        }
    });
    
    // Close mobile menu when clicking on links
    const mobileLinks = elements.mobileMenu.querySelectorAll('a');
    mobileLinks.forEach(link => {
        link.addEventListener('click', () => {
            closeMobileMenu();
        });
    });
    
    // Close mobile menu when clicking outside
    document.addEventListener('click', function(e) {
        if (elements.mobileMenu.classList.contains('active') &&
            !elements.mobileMenu.contains(e.target) && 
            !elements.mobileMenuToggle.contains(e.target)) {
            closeMobileMenu();
        }
    });
    
    // Close mobile menu on escape key
    document.addEventListener('keydown', function(e) {
        if (e.key === 'Escape' && elements.mobileMenu.classList.contains('active')) {
            closeMobileMenu();
        }
    });
}

function closeMobileMenu() {
    elements.mobileMenu.classList.remove('active');
    elements.mobileMenuToggle.classList.remove('active');
    
    // Improve accessibility
    elements.mobileMenuToggle.setAttribute('aria-expanded', 'false');
    elements.mobileMenu.setAttribute('aria-hidden', 'true');
}

// Cart functionality - now uses unified CartManager
function initializeCart() {
    // Cart is now automatically handled by the unified CartManager
    // No additional setup needed as it's handled globally
}

// Load products using unified DataLoader
async function loadProducts() {
    try {
        products = await window.utils.dataLoader.loadData('products');
        displayFeaturedProducts();
    } catch (error) {
        window.utils.handleError(error, {
            module: 'main',
            context: 'loadProducts'
        });
        showProductsError();
    }
}

// Display featured products
function displayFeaturedProducts() {
    if (!elements.featuredProductsGrid) return;
    
    const featuredProducts = products.filter(product => product.featured).slice(0, 6);
    
    if (featuredProducts.length === 0) {
        showProductsError();
        return;
    }
    
    const productsHTML = featuredProducts.map(product => createProductCard(product)).join('');
    elements.featuredProductsGrid.innerHTML = productsHTML;
    
    // Cart buttons are now handled globally by CartManager
}

// Use unified product card component
function createProductCard(product) {
    return window.createProductCardComponent(product, {
        isMobile: isMobile,
        maxTags: 3
    });
}

// Show products error using unified error handler
function showProductsError() {
    if (elements.featuredProductsGrid) {
        elements.featuredProductsGrid.innerHTML = window.createEmptyStateComponent(
            'No se pudieron cargar los productos destacados',
            'Por favor, recarga la página'
        );
    }
}

// Enhanced scroll effects with performance optimization
function initializeScrollEffects() {
    const header = document.querySelector('.header');
    if (!header) return;
    
    let isScrolled = false;
    let ticking = false;
    
    function updateHeader() {
        const scrollTop = window.pageYOffset || document.documentElement.scrollTop;
        const shouldBeScrolled = scrollTop > 50;
        
        if (shouldBeScrolled !== isScrolled) {
            isScrolled = shouldBeScrolled;
            header.classList.toggle('scrolled', isScrolled);
        }
        
        ticking = false;
    }
    
    function requestTick() {
        if (!ticking) {
            requestAnimationFrame(updateHeader);
            ticking = true;
        }
    }
    
    window.addEventListener('scroll', requestTick, { passive: true });
}

// Enhanced animations with mobile optimization
function initializeAnimations() {
    // Skip animations on mobile for better performance
    if (isMobile) return;
    
    const observerOptions = {
        threshold: 0.1,
        rootMargin: '0px 0px -50px 0px'
    };
    
    const observer = new IntersectionObserver(function(entries) {
        entries.forEach(entry => {
            if (entry.isIntersecting) {
                entry.target.classList.add('animate-in');
                observer.unobserve(entry.target);
            }
        });
    }, observerOptions);
    
    // Observe elements with a delay to avoid layout shift
    setTimeout(() => {
        const animateElements = document.querySelectorAll('.category-card, .product-card, .about-content');
        animateElements.forEach(el => {
            if (!el.classList.contains('animate-in')) {
                observer.observe(el);
            }
        });
    }, 100);
}

// Error boundary for JavaScript errors
window.addEventListener('error', function(e) {
    console.error('JavaScript error:', e);
    // エラーはコンソールのみに出力
});

// Service Worker registration for PWA
if ('serviceWorker' in navigator) {
    window.addEventListener('load', function() {
        navigator.serviceWorker.register('/sw.js')
            .then(function(_registration) {
                console.log('ServiceWorker registration successful');
            })
            .catch(function(_error) {
                console.log('ServiceWorker registration failed');
            });
    });
}